[{"/home/akhilkala/Desktop/Web/my-app/src/index.tsx":"1","/home/akhilkala/Desktop/Web/my-app/src/App.tsx":"2","/home/akhilkala/Desktop/Web/coder/web/src/index.tsx":"3","/home/akhilkala/Desktop/Web/coder/web/src/App.tsx":"4","/home/akhilkala/Desktop/Web/coder/web/src/pages/Home.tsx":"5","/home/akhilkala/Desktop/Web/coder/web/src/context/AuthContext.tsx":"6","/home/akhilkala/Desktop/Web/coder/web/src/utils/requests.ts":"7","/home/akhilkala/Desktop/Web/coder/web/src/components/PrivateRoute.tsx":"8","/home/akhilkala/Desktop/Web/coder/web/src/components/Loading.tsx":"9","/home/akhilkala/Desktop/Web/coder/web/src/pages/Landing.tsx":"10","/home/akhilkala/Desktop/Web/coder/web/src/pages/auth/Login.tsx":"11","/home/akhilkala/Desktop/Web/coder/web/src/components/Input.tsx":"12","/home/akhilkala/Desktop/Web/coder/web/src/hooks/useInputState.ts":"13","/home/akhilkala/Desktop/Web/coder/web/src/components/Button.tsx":"14"},{"size":220,"mtime":1608013198903,"results":"15","hashOfConfig":"16"},{"size":324,"mtime":1608013657938,"results":"17","hashOfConfig":"16"},{"size":311,"mtime":1627123119704,"results":"18","hashOfConfig":"19"},{"size":526,"mtime":1627124117072,"results":"20","hashOfConfig":"19"},{"size":168,"mtime":1627123972041,"results":"21","hashOfConfig":"19"},{"size":3569,"mtime":1627188366167,"results":"22","hashOfConfig":"19"},{"size":972,"mtime":1627129681712,"results":"23","hashOfConfig":"19"},{"size":882,"mtime":1627123663043,"results":"24","hashOfConfig":"19"},{"size":156,"mtime":1627123635817,"results":"25","hashOfConfig":"19"},{"size":174,"mtime":1627123967777,"results":"26","hashOfConfig":"19"},{"size":1669,"mtime":1627199195650,"results":"27","hashOfConfig":"19"},{"size":1049,"mtime":1627196479430,"results":"28","hashOfConfig":"19"},{"size":506,"mtime":1627128603501,"results":"29","hashOfConfig":"19"},{"size":248,"mtime":1627197212213,"results":"30","hashOfConfig":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"13qawev",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1vc0e92",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/akhilkala/Desktop/Web/my-app/src/index.tsx",[],["66","67"],"/home/akhilkala/Desktop/Web/my-app/src/App.tsx",["68"],"/home/akhilkala/Desktop/Web/coder/web/src/index.tsx",[],["69","70"],"/home/akhilkala/Desktop/Web/coder/web/src/App.tsx",[],"/home/akhilkala/Desktop/Web/coder/web/src/pages/Home.tsx",["71"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function Home({}: Props): ReactElement {\n  return <div className=\"home page\"></div>;\n}\n","/home/akhilkala/Desktop/Web/coder/web/src/context/AuthContext.tsx",["72","73","74","75"],"import React, {\n  ReactElement,\n  useContext,\n  createContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { Nullable, User, Children } from '../utils/types';\n\nimport { get, post, put } from '../utils/requests';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n// import { useToasts } from 'react-toast-notifications';\n\ntype Value = {\n  user: Nullable<User>;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (\n    name: string,\n    username: string,\n    email: string,\n    password: string\n  ) => Promise<void>;\n  loading: Boolean;\n  updateUser: (userData: any) => void;\n};\n\nconst AuthContext = createContext<Nullable<Value>>(null);\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default function AuthProvider({ children }: Children): ReactElement {\n  const [user, setUser] = useState<Nullable<User> | any>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n  const history = useHistory();\n\n  //   const { addToast } = useToasts();\n\n  useEffect(() => {\n    setLoading(false);\n  });\n\n  const login = async (email: string, password: string) => {\n    // setLoading(true);\n    try {\n      const res = await post('/auth/login', {\n        email: email.trim(),\n        password,\n      });\n\n      console.log(res);\n\n      history.push('/');\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const register = async (\n    name: string,\n    username: string,\n    email: string,\n    password: string\n  ) => {\n    try {\n      await post('/auth/register', {\n        name,\n        username,\n        email: email.trim().toLowerCase(),\n        password,\n      });\n\n      history.push('/login');\n      //   addToast('Verification Mail Sent', { appearance: 'info' });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setUser(null);\n      setLoading(false);\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  //   const forgotPassword = async (email: string) => {\n  //     try {\n  //       await post('/forgotpassword', { email: email.trim().toLowerCase() });\n  //       addToast('Mail Sent!', { appearance: 'success' });\n  //     } catch (err) {\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  //   const resetPassword = async (password: string, token: string) => {\n  //     try {\n  //       await put(`/resetpassword/${token}`, { password });\n  //       history.push('/login');\n  //       addToast('Password Changed!', { appearance: 'success' });\n  //     } catch (err) {\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  //   const isAdmin = () => user?.role === 1;\n\n  const updateUser = (userData: User) => {\n    setUser(userData);\n  };\n\n  //   const check = async () => {\n  //     try {\n  //       const res = await get('/me');\n  //       if (!res) {\n  //         // logout();\n  //         history.push('/');\n  //         addToast('Something Went wrong', { appearance: 'error' });\n  //         return;\n  //       }\n  //       // else if (res.isBanned){\n\n  //       // }\n  //       setUser(res);\n  //       history.push('/');\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     } catch (err) {\n  //       history.push('/');\n  //       addToast('Something Went wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  const value = {\n    user,\n    login,\n    logout,\n    register,\n    loading,\n    updateUser,\n  };\n\n  // {children}\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n","/home/akhilkala/Desktop/Web/coder/web/src/utils/requests.ts",[],"/home/akhilkala/Desktop/Web/coder/web/src/components/PrivateRoute.tsx",["76","77","78"],"import React, { ReactElement } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth } from '../context/AuthContext';\nimport Landing from '../pages/Landing';\nimport Loading from './Loading';\n\ninterface Props {\n  component: React.FC<any>;\n  path: string | string[];\n  exact?: boolean;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}: Props): ReactElement {\n  const auth = useAuth();\n\n  const location = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={(props: any) => {\n        if (auth?.user) {\n          return <Component {...props} />;\n        } else {\n          if (auth?.loading)\n            return (\n              <div className=\"screen-center\">\n                <Loading />\n              </div>\n            );\n          return <Landing />;\n        }\n      }}\n    />\n  );\n}\n","/home/akhilkala/Desktop/Web/coder/web/src/components/Loading.tsx",["79"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function Loading({}: Props): ReactElement {\n  return <div>Loading</div>;\n}\n","/home/akhilkala/Desktop/Web/coder/web/src/pages/Landing.tsx",["80"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function Landing({}: Props): ReactElement {\n  return <div className=\"landing page\"></div>;\n}\n","/home/akhilkala/Desktop/Web/coder/web/src/pages/auth/Login.tsx",["81"],"/home/akhilkala/Desktop/Web/coder/web/src/components/Input.tsx",[],"/home/akhilkala/Desktop/Web/coder/web/src/hooks/useInputState.ts",[],"/home/akhilkala/Desktop/Web/coder/web/src/components/Button.tsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":43,"nodeType":"88","messageId":"89","endLine":2,"endColumn":48},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":5,"column":30,"nodeType":"94","messageId":"95","endLine":5,"endColumn":39},{"ruleId":"86","severity":1,"message":"96","line":10,"column":10,"nodeType":"88","messageId":"89","endLine":10,"endColumn":13},{"ruleId":"86","severity":1,"message":"97","line":10,"column":21,"nodeType":"88","messageId":"89","endLine":10,"endColumn":24},{"ruleId":"86","severity":1,"message":"98","line":11,"column":22,"nodeType":"88","messageId":"89","endLine":11,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":43,"column":3,"nodeType":"88","endLine":43,"endColumn":12,"suggestions":"101"},{"ruleId":"86","severity":1,"message":"102","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"103","line":2,"column":27,"nodeType":"88","messageId":"89","endLine":2,"endColumn":37},{"ruleId":"86","severity":1,"message":"104","line":20,"column":9,"nodeType":"88","messageId":"89","endLine":20,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":5,"column":33,"nodeType":"94","messageId":"95","endLine":5,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":5,"column":33,"nodeType":"94","messageId":"95","endLine":5,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":20,"column":31,"nodeType":"94","messageId":"95","endLine":20,"endColumn":40},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar",["105"],["106"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'get' is defined but never used.","'put' is defined but never used.","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["107"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'location' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Add dependencies array: []",{"range":"110","text":"111"},[1085,1085],", []"]