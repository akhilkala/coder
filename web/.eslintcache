[{"/usr/src/client/src/index.tsx":"1","/usr/src/client/src/App.tsx":"2","/usr/src/client/src/components/ErrorBoundary.tsx":"3","/usr/src/client/src/context/AuthContext.tsx":"4","/usr/src/client/src/hooks/useReactQuery.ts":"5","/usr/src/client/src/utils/utilities.ts":"6","/usr/src/client/src/utils/requests.ts":"7","/usr/src/client/src/components/PrivateRoute.tsx":"8","/usr/src/client/src/components/Button.tsx":"9","/usr/src/client/src/pages/auth/Login.tsx":"10","/usr/src/client/src/pages/auth/ForgotPassword.tsx":"11","/usr/src/client/src/pages/Home.tsx":"12","/usr/src/client/src/pages/auth/ResetPassword.tsx":"13","/usr/src/client/src/pages/auth/Register.tsx":"14","/usr/src/client/src/hooks/useInputState.ts":"15","/usr/src/client/src/components/Loading.tsx":"16","/usr/src/client/src/pages/Landing.tsx":"17","/usr/src/client/src/pages/Profile.tsx":"18","/usr/src/client/src/components/Input.tsx":"19","/usr/src/client/src/pages/Settings.tsx":"20","/usr/src/client/src/pages/Contests.tsx":"21","/usr/src/client/src/pages/Social.tsx":"22","/usr/src/client/src/pages/Feed.tsx":"23","/usr/src/client/src/pages/NotFound.tsx":"24","/usr/src/client/src/components/CompanionModal.tsx":"25"},{"size":863,"mtime":1627772568129,"results":"26","hashOfConfig":"27"},{"size":1235,"mtime":1628294439069,"results":"28","hashOfConfig":"27"},{"size":884,"mtime":1627754824867,"results":"29","hashOfConfig":"27"},{"size":3709,"mtime":1628294785652,"results":"30","hashOfConfig":"27"},{"size":708,"mtime":1628294796976,"results":"31","hashOfConfig":"27"},{"size":339,"mtime":1627823635838,"results":"32","hashOfConfig":"27"},{"size":954,"mtime":1627819539074,"results":"33","hashOfConfig":"27"},{"size":961,"mtime":1628294580816,"results":"34","hashOfConfig":"27"},{"size":464,"mtime":1627711066419,"results":"35","hashOfConfig":"27"},{"size":1903,"mtime":1628290986454,"results":"36","hashOfConfig":"27"},{"size":156,"mtime":1627199518372,"results":"37","hashOfConfig":"27"},{"size":2289,"mtime":1628313752738,"results":"38","hashOfConfig":"27"},{"size":155,"mtime":1627199511200,"results":"39","hashOfConfig":"27"},{"size":2896,"mtime":1628292538603,"results":"40","hashOfConfig":"27"},{"size":506,"mtime":1627128603501,"results":"41","hashOfConfig":"27"},{"size":517,"mtime":1628281938970,"results":"42","hashOfConfig":"27"},{"size":836,"mtime":1628291342298,"results":"43","hashOfConfig":"27"},{"size":1245,"mtime":1628281442105,"results":"44","hashOfConfig":"27"},{"size":2300,"mtime":1627286743072,"results":"45","hashOfConfig":"27"},{"size":243,"mtime":1627831471718,"results":"46","hashOfConfig":"27"},{"size":2323,"mtime":1628295068598,"results":"47","hashOfConfig":"27"},{"size":237,"mtime":1627831427296,"results":"48","hashOfConfig":"27"},{"size":1708,"mtime":1628294771028,"results":"49","hashOfConfig":"27"},{"size":328,"mtime":1628294156939,"results":"50","hashOfConfig":"27"},{"size":761,"mtime":1628313873721,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"bmhr5q",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/client/src/index.tsx",[],["116","117"],"/usr/src/client/src/App.tsx",[],"/usr/src/client/src/components/ErrorBoundary.tsx",[],"/usr/src/client/src/context/AuthContext.tsx",["118","119","120"],"import React, {\n  ReactElement,\n  useContext,\n  createContext,\n  useState,\n  useEffect,\n} from 'react';\nimport { Nullable, User, Children } from '../utils/types';\n\n//TODO: remove unnecsary imports everywhere\nimport { get, post } from '../utils/requests';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport jwt from 'jwt-decode';\n\n// import { useToasts } from 'react-toast-notifications';\n\ntype Value = {\n  user: Nullable<User>;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (\n    name: string,\n    username: string,\n    email: string,\n    password: string\n  ) => Promise<void>;\n  loading: Boolean;\n  updateUser: (userData: any) => void;\n};\n\nconst AuthContext = createContext<Nullable<Value>>(null);\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default function AuthProvider({ children }: Children): ReactElement {\n  const [user, setUser] = useState<Nullable<User>>(null);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n  const history = useHistory();\n\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    setLoading(false);\n  });\n\n  const login = async (email: string, password: string) => {\n    // setLoading(true);\n    try {\n      const res = await post('/auth/login', {\n        email: email.trim(),\n        password,\n      });\n\n      const user = jwt(res.token);\n      setUser(user);\n\n      history.push('/');\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const register = async (\n    name: string,\n    username: string,\n    email: string,\n    password: string\n  ) => {\n    try {\n      await post('/auth/register', {\n        name,\n        username,\n        email: email.trim().toLowerCase(),\n        password,\n      });\n\n      history.push('/login');\n      addToast('Verification Mail Sent', { appearance: 'info' });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setUser(null);\n      history.push('/');\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  //   const forgotPassword = async (email: string) => {\n  //     try {\n  //       await post('/forgotpassword', { email: email.trim().toLowerCase() });\n  //       addToast('Mail Sent!', { appearance: 'success' });\n  //     } catch (err) {\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  //   const resetPassword = async (password: string, token: string) => {\n  //     try {\n  //       await put(`/resetpassword/${token}`, { password });\n  //       history.push('/login');\n  //       addToast('Password Changed!', { appearance: 'success' });\n  //     } catch (err) {\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  //   const isAdmin = () => user?.role === 1;\n\n  const updateUser = (userData: User) => {\n    setUser(userData);\n  };\n\n  //   const check = async () => {\n  //     try {\n  //       const res = await get('/me');\n  //       if (!res) {\n  //         // logout();\n  //         history.push('/');\n  //         addToast('Something Went wrong', { appearance: 'error' });\n  //         return;\n  //       }\n  //       // else if (res.isBanned){\n\n  //       // }\n  //       setUser(res);\n  //       history.push('/');\n  //       addToast('Something Went Wrong', { appearance: 'error' });\n  //     } catch (err) {\n  //       history.push('/');\n  //       addToast('Something Went wrong', { appearance: 'error' });\n  //     }\n  //   };\n\n  const value = {\n    user,\n    login,\n    logout,\n    register,\n    loading,\n    updateUser,\n  };\n\n  // {children}\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n","/usr/src/client/src/hooks/useReactQuery.ts",["121"],"import { useQuery } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport { get } from '../utils/requests';\n\nexport default (\n  endpoint: string,\n  onSuccess?: () => any,\n  onError?: () => any\n) => {\n  const { addToast } = useToasts();\n  const histroy = useHistory();\n\n  return useQuery(endpoint, () => get(endpoint), {\n    onError: () => {\n      if (onError) {\n        onError();\n        return;\n      }\n      histroy.push('/');\n      addToast('Something went wrong', { appearance: 'error' });\n    },\n    onSuccess,\n    retry: 2,\n    refetchOnWindowFocus: false,\n    // TODO: check implications\n    useErrorBoundary: true,\n  });\n};\n","/usr/src/client/src/utils/utilities.ts",[],"/usr/src/client/src/utils/requests.ts",[],"/usr/src/client/src/components/PrivateRoute.tsx",["122"],"import React, { ReactElement } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth } from '../context/AuthContext';\nimport Landing from '../pages/Landing';\nimport Loading from './Loading';\n\ninterface Props {\n  component: React.FC<any>;\n  path: string | string[];\n  exact?: boolean;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}: Props): ReactElement {\n  const auth = useAuth();\n  const location = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={(props: any) => {\n        if (auth?.user) {\n          return <Component {...props} />;\n        } else {\n          if (auth?.loading)\n            return (\n              <div className=\"screen-center\">\n                <Loading />\n              </div>\n            );\n\n          if (location.pathname === '/') return <Landing />;\n          else return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n}\n","/usr/src/client/src/components/Button.tsx",[],"/usr/src/client/src/pages/auth/Login.tsx",["123","124"],"import React, { ReactElement } from 'react';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\nimport Lottie from 'react-lottie';\nimport animation from '../../assets/animations/auth.json';\nimport Button from '../../components/Button';\n\nimport { lottieOptions } from '../../utils/utilities';\nimport { useToasts } from 'react-toast-notifications';\nimport { Link } from 'react-router-dom';\n\ninterface Props {}\n\nexport default function Login({}: Props): ReactElement {\n  const email = useInputState();\n  const password = useInputState();\n\n  const [error, setError] = React.useState('');\n  const { addToast } = useToasts();\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    //TODO: prevent spam\n    try {\n      await auth?.login(email.value, password.value);\n    } catch (err: any) {\n      setError(err.response.data.message);\n    }\n  };\n\n  return (\n    <div className=\"auth auth--login page\">\n      {/* TODO: Render aside only once */}\n      <aside className=\"left\">\n        <div className=\"lottie\">\n          <Lottie options={lottieOptions(animation)} height={400} width={400} />\n        </div>\n        <h1>\n          Welcome to <span>Coder</span>\n        </h1>\n      </aside>\n      <aside className=\"right\">\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit}>\n          {!!error && <div className=\"error\">{error}</div>}\n          <Input state={email} name=\"Email\" />\n          <Input state={password} name=\"Password\" type=\"password\" />\n          <div className=\"forgot\">\n            <span>Forgot your password?</span>\n          </div>\n          <Button>Submit</Button>\n          <div className=\"switch\">\n            Not a member? <Link to=\"/register\">Join us!</Link>\n          </div>\n        </form>\n      </aside>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/auth/ForgotPassword.tsx",["125"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function ForgotPassword({}: Props): ReactElement {\n  return <div></div>;\n}\n","/usr/src/client/src/pages/Home.tsx",["126","127","128"],"/usr/src/client/src/pages/auth/ResetPassword.tsx",["129"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function ResetPassword({}: Props): ReactElement {\n  return <div></div>;\n}\n","/usr/src/client/src/pages/auth/Register.tsx",["130","131"],"import React, { ReactElement } from 'react';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\nimport Lottie from 'react-lottie';\nimport animation from '../../assets/animations/auth.json';\nimport Button from '../../components/Button';\n\nimport { lottieOptions } from '../../utils/utilities';\nimport { get } from '../../utils/requests';\nimport { Link } from 'react-router-dom';\n\ninterface Props {}\n\nexport default function Register({}: Props): ReactElement {\n  const name = useInputState();\n  //TODO: name and username length checks\n  const username = useInputState();\n  const email = useInputState();\n  const password = useInputState();\n  const confirmPassword = useInputState();\n\n  const [usernameCheck, setUsernameCheck] = React.useState({\n    valid: false,\n    invalid: false,\n    loading: false,\n  });\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      //   await auth?.register(email.value, password.value);\n    } catch (err: any) {\n      // console.log(err.response);\n    }\n  };\n\n  const checkAvailability = async () => {\n    if (!username.value) {\n      setUsernameCheck({\n        valid: false,\n        loading: false,\n        invalid: false,\n      });\n      return;\n    }\n\n    setUsernameCheck((prev) => ({ ...prev, loading: true }));\n    const res = await get(`/user/check/${username.value}`);\n\n    setUsernameCheck({\n      valid: !res.usernameTaken,\n      loading: false,\n      invalid: res.usernameTaken,\n    });\n  };\n\n  return (\n    <div className=\"auth auth--register page\">\n      <aside className=\"left\">\n        <div className=\"lottie\">\n          <Lottie options={lottieOptions(animation)} height={400} width={400} />\n        </div>\n        <h1>\n          Welcome to <span>Coder</span>\n        </h1>\n      </aside>\n      <aside className=\"right\">\n        <h1>Sign up</h1>\n        <form onSubmit={handleSubmit}>\n          <section>\n            <Input state={name} name=\"Name\" />\n            <Input\n              loading={usernameCheck.loading}\n              valid={usernameCheck.valid}\n              invalid={usernameCheck.invalid}\n              onBlur={checkAvailability}\n              state={username}\n              name=\"Username\"\n            />\n          </section>\n          <Input state={email} name=\"Email\" />\n          <section>\n            <Input state={password} name=\"Password\" type=\"password\" />\n            <Input\n              state={confirmPassword}\n              name=\"Confirm Password\"\n              type=\"password\"\n            />\n            {/* TODO: Implement captcha */}\n          </section>\n          <Button>Submit</Button>\n          <div className=\"switch\">\n            Already a member? <Link to=\"/login\">Login</Link>\n          </div>\n        </form>\n      </aside>\n    </div>\n  );\n}\n","/usr/src/client/src/hooks/useInputState.ts",[],"/usr/src/client/src/components/Loading.tsx",[],"/usr/src/client/src/pages/Landing.tsx",["132"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png';\n\ninterface Props {}\n\nexport default function Landing({}: Props): ReactElement {\n  return (\n    <div className=\"landing page\">\n      <nav>\n        <span>\n          <img src={logo} alt=\"\" />\n          {/* <h2>Coder</h2> */}\n        </span>\n        <div className=\"links\">\n          <Link to=\"/register\">Register</Link>\n          <Link to=\"/login\">Login</Link>\n        </div>\n      </nav>\n      <main>\n        <h1>Coder</h1>\n        <p>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Itaque\n          doloribus quos amet commodi hic repellendus, error culpa a quod!\n        </p>\n        <Link className=\"cta\" to=\"/login\">\n          Start Coding\n        </Link>\n      </main>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Profile.tsx",[],"/usr/src/client/src/components/Input.tsx",[],"/usr/src/client/src/pages/Settings.tsx",["133"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function Settings({}: Props): ReactElement {\n  return (\n    <div className=\"settings section\">\n      <h1 className=\"main-heading\">Settings</h1>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Contests.tsx",["134"],"import React, { ReactElement } from 'react';\nimport Loading from '../components/Loading';\nimport useInputState from '../hooks/useInputState';\nimport useReactQuery from '../hooks/useReactQuery';\nimport { logos, lottieOptions } from '../utils/utilities';\nimport Lottie from 'react-lottie';\nimport animation from '../assets/animations/empty.json';\n\ninterface Props {}\n\ninterface IContest {\n  name: string;\n  url: string;\n  start_time: Date;\n  end_time: Date;\n  duration: string;\n  site: string;\n  in_24_hours: 'Yes' | 'No';\n  status: 'CODING' | 'BEFORE';\n}\n\nexport default function Contests({}: Props): ReactElement {\n  const contestsFetcher = useReactQuery(`/contest`);\n\n  const search = useInputState();\n\n  if (contestsFetcher.isLoading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  const getDerivedData = () =>\n    contestsFetcher.data?.filter((contest: IContest) => {\n      const searchTerm = [contest.name, contest.site].join(' ');\n      return searchTerm.toLowerCase().includes(search.value.toLowerCase());\n    });\n\n  return (\n    <div className=\"contests section\">\n      {/* TODO: change heading fonts */}\n      <h1 className=\"main-heading\">Contests</h1>\n      <div className=\"search\">\n        <i className=\"fa fa-search\"></i>\n        <input\n          value={search.value}\n          onChange={search.handleChange}\n          placeholder=\"Search\"\n          type=\"text\"\n        />\n      </div>\n      <div className=\"list\">\n        {getDerivedData().map((contest: IContest) => (\n          <Contest {...contest} />\n        ))}\n        {!getDerivedData().length && (\n          <div className=\"empty\">\n            <Lottie\n              options={lottieOptions(animation, false)}\n              height={200}\n              width={200}\n            />\n            <h1>No Results Found</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Contest(contest: IContest): ReactElement {\n  return (\n    <>\n      {/* {JSON.stringify(contest)} */}\n      <div className=\"contest\">\n        <img src={logos(contest.site)} alt=\"\" />\n        <a target=\"_blank\" rel=\"noreferrer noopener\" href={contest.url}>\n          <div className=\"title\">\n            {contest.name}\n            <i className=\"fas fa-link\"></i>\n          </div>\n        </a>\n      </div>\n    </>\n  );\n}\n","/usr/src/client/src/pages/Social.tsx",["135"],"import React, { ReactElement } from 'react';\n\ninterface Props {}\n\nexport default function Social({}: Props): ReactElement {\n  return (\n    <div className=\"social section\">\n      <h1 className=\"main-heading\">Social</h1>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Feed.tsx",["136","137"],"import React, { ReactElement } from 'react';\nimport Loading from '../components/Loading';\nimport { get } from '../utils/requests';\nimport { Nullable } from '../utils/types';\n\ninterface Props {}\n\ninterface IProblem {\n  name: string;\n  link: string;\n}\n\nexport default function Feed({}: Props): ReactElement {\n  return (\n    <div className=\"feed section\">\n      <main>asd</main>\n      <Problems />\n    </div>\n  );\n}\n\nfunction Problems({}: Props): ReactElement {\n  const [problems, setProblems] = React.useState<Nullable<IProblem[]>>(null);\n  const [loading, setLoading] = React.useState<boolean>(true);\n\n  const fetchProblems = async () => {\n    setProblems(null);\n    setLoading(true);\n    //TODO; error handling (maybe put get post in a custom hook)\n    const res = await get('/problem/random/20');\n    setProblems(res);\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    fetchProblems();\n  }, []);\n\n  return (\n    <aside className=\"problems\">\n      <h1>Problems</h1>\n      {loading && (\n        <div className=\"loading\">\n          <Loading width={200} height={200} />\n        </div>\n      )}\n\n      {!loading && (\n        <div onClick={fetchProblems} className=\"shuffle\">\n          Shuffle <i className=\"fas fa-random\"></i>\n        </div>\n      )}\n\n      {problems?.map((problem: IProblem) => (\n        <div className=\"problem\">\n          <span>{problem.name}</span>\n          <div className=\"links\">\n            {/* TODO: add tooltips */}\n            <i className=\"fas fa-plus\"></i>\n            <a target=\"_blank\" rel=\"noreferrer noopener\" href={problem.link}>\n              <i className=\"fas fa-external-link-alt\"></i>\n            </a>\n          </div>\n        </div>\n      ))}\n    </aside>\n  );\n}\n","/usr/src/client/src/pages/NotFound.tsx",["138"],"import React, { ReactElement } from 'react';\nimport logo from '../assets/logo.png';\n\ninterface Props {}\n\nexport default function NotFound({}: Props): ReactElement {\n  return (\n    <div className=\"not-found\">\n      <h1>\n        4\n        <img src={logo} alt=\"\" />4\n      </h1>\n      <span>Page Not Found</span>\n    </div>\n  );\n}\n","/usr/src/client/src/components/CompanionModal.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":13},{"ruleId":"143","severity":1,"message":"147","line":12,"column":22,"nodeType":"145","messageId":"146","endLine":12,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":46,"column":3,"nodeType":"145","endLine":46,"endColumn":12,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":1,"nodeType":"153","endLine":29,"endColumn":3},{"ruleId":"143","severity":1,"message":"154","line":2,"column":27,"nodeType":"145","messageId":"146","endLine":2,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":15,"column":31,"nodeType":"157","messageId":"158","endLine":15,"endColumn":40},{"ruleId":"143","severity":1,"message":"159","line":20,"column":11,"nodeType":"145","messageId":"146","endLine":20,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":5,"column":40,"nodeType":"157","messageId":"158","endLine":5,"endColumn":49},{"ruleId":"143","severity":1,"message":"144","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":13},{"ruleId":"143","severity":1,"message":"160","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":16,"column":30,"nodeType":"157","messageId":"158","endLine":16,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":5,"column":39,"nodeType":"157","messageId":"158","endLine":5,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":15,"column":34,"nodeType":"157","messageId":"158","endLine":15,"endColumn":43},{"ruleId":"143","severity":1,"message":"161","line":29,"column":9,"nodeType":"145","messageId":"146","endLine":29,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":7,"column":33,"nodeType":"157","messageId":"158","endLine":7,"endColumn":42},{"ruleId":"155","severity":1,"message":"156","line":5,"column":34,"nodeType":"157","messageId":"158","endLine":5,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":22,"column":34,"nodeType":"157","messageId":"158","endLine":22,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":5,"column":32,"nodeType":"157","messageId":"158","endLine":5,"endColumn":41},{"ruleId":"155","severity":1,"message":"156","line":13,"column":30,"nodeType":"157","messageId":"158","endLine":13,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":22,"column":19,"nodeType":"157","messageId":"158","endLine":22,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":6,"column":34,"nodeType":"157","messageId":"158","endLine":6,"endColumn":43},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["164"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useHistory' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'addToast' is assigned a value but never used.","'Nullable' is defined but never used.","'auth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Add dependencies array: []",{"range":"167","text":"168"},[1198,1198],", []"]